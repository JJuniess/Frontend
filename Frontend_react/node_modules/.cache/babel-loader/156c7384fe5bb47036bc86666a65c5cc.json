{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\Frontend_react\\\\src\\\\components\\\\Setting\\\\SiteAdd_map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DaumPostcode from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [address, setAddress] = useState(''); // 주소\n\n  const [addressDetail, setAddressDetail] = useState(''); // 상세주소\n\n  const [isOpenPost, setIsOpenPost] = useState(false);\n\n  const onChangeOpenPost = () => {\n    setIsOpenPost(!isOpenPost);\n  };\n\n  const onCompletePost = data => {\n    let fullAddr = data.address;\n    let extraAddr = '';\n\n    if (data.addressType === 'R') {\n      if (data.bname !== '') {\n        extraAddr += data.bname;\n      }\n\n      if (data.buildingName !== '') {\n        extraAddr += extraAddr !== '' ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddr += extraAddr !== '' ? ` (${extraAddr})` : '';\n    }\n\n    setAddress(data.zonecode);\n    setAddressDetail(fullAddress);\n    setIsOpenPost(false);\n  };\n\n  const postCodeStyle = {\n    display: 'block',\n    position: 'relative',\n    top: '0%',\n    width: '400px',\n    height: '400px',\n    padding: '7px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpenPost ? /*#__PURE__*/_jsxDEV(DaumPostcode, {\n      style: postCodeStyle,\n      autoClose: true,\n      onComplete: onCompletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(SignUp, \"bi2M+g5YBbdUq5WavAOgbJhsQ9w=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/Frontend_react/src/components/Setting/SiteAdd_map.js"],"names":["React","useEffect","useState","DaumPostcode","SignUp","address","setAddress","addressDetail","setAddressDetail","isOpenPost","setIsOpenPost","onChangeOpenPost","onCompletePost","data","fullAddr","extraAddr","addressType","bname","buildingName","zonecode","fullAddress","postCodeStyle","display","position","top","width","height","padding"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC,CAFmB,CAEyB;;AAC5C,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD,CAHmB,CAGqC;;AAGxD,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;;AAIA,QAAMS,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFD;;AAIA,QAAMG,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAIC,QAAQ,GAAGD,IAAI,CAACR,OAApB;AACA,QAAIU,SAAS,GAAG,EAAhB;;AAEA,QAAIF,IAAI,CAACG,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,UAAIH,IAAI,CAACI,KAAL,KAAe,EAAnB,EAAuB;AACrBF,QAAAA,SAAS,IAAIF,IAAI,CAACI,KAAlB;AACD;;AACD,UAAIJ,IAAI,CAACK,YAAL,KAAsB,EAA1B,EAA8B;AAC5BH,QAAAA,SAAS,IAAIA,SAAS,KAAK,EAAd,GAAoB,KAAIF,IAAI,CAACK,YAAa,EAA1C,GAA8CL,IAAI,CAACK,YAAhE;AACD;;AACDJ,MAAAA,QAAQ,IAAIC,SAAS,KAAK,EAAd,GAAoB,KAAIA,SAAU,GAAlC,GAAuC,EAAnD;AACD;;AAEDT,IAAAA,UAAU,CAACO,IAAI,CAACM,QAAN,CAAV;AACAX,IAAAA,gBAAgB,CAACY,WAAD,CAAhB;AACAV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAjBD;;AAqBA,QAAMW,aAAa,GAAG;AACpBC,IAAAA,OAAO,EAAE,OADW;AAEpBC,IAAAA,QAAQ,EAAE,UAFU;AAGpBC,IAAAA,GAAG,EAAE,IAHe;AAIpBC,IAAAA,KAAK,EAAE,OAJa;AAKpBC,IAAAA,MAAM,EAAE,OALY;AAMpBC,IAAAA,OAAO,EAAE;AANW,GAAtB;AAWA,sBACE;AAAA,cACGlB,UAAU,gBACR,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEY,aAArB;AAAoC,MAAA,SAAS,MAA7C;AAA8C,MAAA,UAAU,EAAET;AAA1D;AAAA;AAAA;AAAA;AAAA,YADQ,GAEP;AAHN,mBADF;AAOD,CArDD;;GAAMR,M;;KAAAA,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\n \r\n\r\nconst SignUp = () => {\r\n\r\n  const [address, setAddress] = useState(''); // 주소\r\n  const [addressDetail, setAddressDetail] = useState(''); // 상세주소\r\n\r\n  \r\n  const [isOpenPost, setIsOpenPost] = useState(false);\r\n\r\n \r\n\r\n  const onChangeOpenPost = () => {\r\n    setIsOpenPost(!isOpenPost);\r\n  };\r\n\r\n  const onCompletePost = (data) => {\r\n    let fullAddr = data.address;\r\n    let extraAddr = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddr += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddr += extraAddr !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddr += extraAddr !== '' ? ` (${extraAddr})` : '';\r\n    }\r\n\r\n    setAddress(data.zonecode);\r\n    setAddressDetail(fullAddress);\r\n    setIsOpenPost(false);\r\n  };\r\n\r\n \r\n\r\n  const postCodeStyle = {\r\n    display: 'block',\r\n    position: 'relative',\r\n    top: '0%',\r\n    width: '400px',\r\n    height: '400px',\r\n    padding: '7px',\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <>\r\n      {isOpenPost  ? (\r\n         <DaumPostcode style={postCodeStyle} autoClose onComplete={onCompletePost } />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}