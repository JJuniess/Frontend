{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\plane\\\\OneDrive\\\\Desktop\\\\git\\\\Frontend\\\\Frontend_react\\\\src\\\\components\\\\Setting\\\\BatteryAdd_site.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import { useSelector, useDispatch } from 'react-redux';\n\nimport { Link } from 'react-router-dom'; //import { selectRow } from '@modules/boardReducer'\n\nimport axios from 'axios';\nimport { cookies, setCookie, useCookies, getCookie } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SiteList() {\n  _s();\n\n  const [inputData, setInputData] = useState([{\n    address: '',\n    id: '',\n    information: '',\n    name: '',\n    type: ''\n  }]); // 글 리스트의 갯수를 세기 위해 선언, 기본값 0\n\n  const [lastid, setLastid] = useState(0); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  useEffect(async () => {\n    try {\n      const res = await axios.get('http://220.149.31.104:9090/api/product/site/all');\n      const inputData = await res.data.map(rowData => ( // rowData 의 갯수만큼 증가\n      setLastid(lastid + 1), {\n        address: rowData.address,\n        id: rowData.id,\n        information: rowData.information,\n        name: rowData.name,\n        type: rowData.type\n      }));\n      setInputData(inputData.concat(inputData));\n    } catch (e) {\n      console.error(e.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"listTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"listTableName th\",\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"listTableAddress th\",\n            children: \"address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), lastid !== 0 ? inputData.map(rowData => // 최초 선언한 기본값은 나타내지 않음\n        rowData.name !== '' && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"listTableName\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/${rowData.name}`,\n              children: rowData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"listTableAddress\",\n            children: rowData.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"listTableName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"listTableAddress noData\",\n            children: \"\\uC791\\uC131\\uB41C \\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SiteList, \"mQeRwELpZ71x0vU4eOTM/eU6zjU=\");\n\n_c = SiteList;\nexport default SiteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SiteList\");","map":{"version":3,"sources":["C:/Users/plane/OneDrive/Desktop/git/Frontend/Frontend_react/src/components/Setting/BatteryAdd_site.js"],"names":["React","useEffect","useState","Link","axios","cookies","setCookie","useCookies","getCookie","SiteList","inputData","setInputData","address","id","information","name","type","lastid","setLastid","res","get","data","map","rowData","concat","e","console","error","message"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n//import { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n//import { selectRow } from '@modules/boardReducer'\r\nimport axios from 'axios';\r\nimport { cookies, setCookie, useCookies, getCookie } from \"react-cookie\";\r\n \r\nfunction SiteList() {\r\n    const [inputData, setInputData] = useState([{\r\n        address: '',\r\n        id: '',\r\n        information: '',\r\n        name: '',\r\n        type: ''\r\n      }])\r\n    \r\n    // 글 리스트의 갯수를 세기 위해 선언, 기본값 0\r\n    const [lastid, setLastid] = useState(0)\r\n \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(async() => {\r\n        try{\r\n            const res = await axios.get('http://220.149.31.104:9090/api/product/site/all')\r\n            const inputData = await res.data.map((rowData) => (\r\n                // rowData 의 갯수만큼 증가\r\n                setLastid(lastid+1),\r\n                {\r\n                    address: rowData.address,\r\n                    id: rowData.id,\r\n                    information: rowData.information,\r\n                    name: rowData.name,\r\n                    type: rowData.type\r\n                })\r\n            )\r\n            setInputData(inputData.concat(inputData))\r\n        } catch(e){\r\n            console.error(e.message)\r\n        }\r\n    },[])\r\n \r\n    return(\r\n        <div>\r\n                <table className='listTable'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='listTableName th'>name</td>\r\n                            <td className='listTableAddress th'>address</td>\r\n                        </tr>\r\n                        {/* rowData 가 없으면 'site 없습니다'를 나타냄 */}\r\n                        {lastid !== 0 ?\r\n                            inputData.map(rowData => (\r\n                            \t// 최초 선언한 기본값은 나타내지 않음\r\n                                rowData.name !== '' &&\r\n                                <tr>\r\n                                    <td className='listTableName'>\r\n                                    \t{/* router 로 이동 시 name값을 param 으로 전달 */}\r\n                                        <Link to={`/${rowData.name}`}>{rowData.name}</Link>\r\n                                    </td>\r\n                                    <td className='listTableAddress'>\r\n                                        {rowData.address}\r\n                                    </td>\r\n                                </tr>\r\n                            )) : \r\n                            <tr>\r\n                                <td className='listTableName'></td>\r\n                                <td className='listTableAddress noData'>작성된 글이 없습니다.</td>\r\n                            </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default SiteList;"]},"metadata":{},"sourceType":"module"}