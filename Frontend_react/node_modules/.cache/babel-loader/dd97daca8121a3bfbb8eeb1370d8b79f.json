{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\Frontend_react\\\\src\\\\components\\\\Setting\\\\SiteAdd_map.js\";\nimport React, { useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Modal from \"react-modal\"; // 추가\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Postcode = () => {\n  const [zipCode, setZipcode] = useState < string > \"\";\n  const [roadAddress, setRoadAddress] = useState < string > \"\";\n  const [detailAddress, setDetailAddress] = useState < string > \"\"; // 추가\n\n  const [isOpen, setIsOpen] = useState < boolean > false; //추가\n\n  const completeHandler = data => {\n    setZipcode(data.zonecode);\n    setRoadAddress(data.roadAddress);\n    setIsOpen(false); //추가\n  }; // Modal 스타일\n\n\n  const customStyles = {\n    overlay: {\n      backgroundColor: \"rgba(0,0,0,0.5)\"\n    },\n    content: {\n      left: \"0\",\n      margin: \"auto\",\n      width: \"500px\",\n      height: \"600px\",\n      padding: \"0\",\n      overflow: \"hidden\"\n    }\n  }; // 검색 클릭\n\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  }; // 상세 주소검색 event\n\n\n  const changeHandler = e => {\n    setDetailAddress(e.target.value);\n  }; // 추가\n\n\n  const clickHandler = () => {\n    if (detailAddress === \"\") {\n      alert(\"상세주소를 입력해주세요.\");\n    } else {\n      console.log(zipCode, roadAddress, detailAddress);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: zipCode,\n      readOnly: true,\n      placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: roadAddress,\n      readOnly: true,\n      placeholder: \"\\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      ariaHideApp: false,\n      style: customStyles,\n      children: /*#__PURE__*/_jsxDEV(DaumPostcode, {\n        onComplete: completeHandler,\n        height: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: changeHandler,\n      value: detailAddress,\n      placeholder: \"\\uC0C1\\uC138\\uC8FC\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"\\uD074\\uB9AD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Postcode;\nexport default Postcode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Postcode\");","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/Frontend_react/src/components/Setting/SiteAdd_map.js"],"names":["React","useState","DaumPostcode","Modal","Postcode","zipCode","setZipcode","string","roadAddress","setRoadAddress","detailAddress","setDetailAddress","isOpen","setIsOpen","boolean","completeHandler","data","zonecode","customStyles","overlay","backgroundColor","content","left","margin","width","height","padding","overflow","toggle","changeHandler","e","target","value","clickHandler","alert","console","log"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport Modal from \"react-modal\"; // 추가\r\n\r\nconst Postcode: React.FC = () =>{\r\n    const [zipCode, setZipcode] = useState<string>(\"\");\r\n    const [roadAddress, setRoadAddress] = useState<string>(\"\");\r\n    const [detailAddress, setDetailAddress] = useState<string>(\"\");    // 추가\r\n    const [isOpen, setIsOpen] = useState<boolean>(false); //추가\r\n\r\n    const completeHandler = (data:any) =>{\r\n        setZipcode(data.zonecode);\r\n        setRoadAddress(data.roadAddress);\r\n        setIsOpen(false); //추가\r\n    }\r\n\r\n    // Modal 스타일\r\n    const customStyles = {\r\n        overlay: {\r\n            backgroundColor: \"rgba(0,0,0,0.5)\",\r\n        },\r\n        content: {\r\n            left: \"0\",\r\n            margin: \"auto\",\r\n            width: \"500px\",\r\n            height: \"600px\",\r\n            padding: \"0\",\r\n            overflow: \"hidden\",\r\n        },\r\n    };\r\n\r\n    // 검색 클릭\r\n    const toggle = () =>{\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    // 상세 주소검색 event\r\n    const changeHandler = (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n        setDetailAddress(e.target.value);\r\n    }\r\n\r\n    // 추가\r\n    const clickHandler = () =>{\r\n        if(detailAddress===\"\"){\r\n            alert(\"상세주소를 입력해주세요.\");\r\n        } else{\r\n            console.log(zipCode, roadAddress, detailAddress);\r\n        } \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <input value={zipCode} readOnly placeholder=\"우편번호\" />\r\n            <button onClick={toggle}>우편번호 검색</button>\r\n            <br />\r\n            <input value={roadAddress} readOnly placeholder=\"도로명 주소\" />\r\n            <br />\r\n            <Modal isOpen={isOpen} ariaHideApp={false} style={customStyles}>\r\n                <DaumPostcode onComplete={completeHandler} height=\"100%\" />\r\n            </Modal>\r\n            <input type=\"text\" onChange={changeHandler} value={detailAddress} placeholder=\"상세주소\"/>\r\n            <br />\r\n            <button onClick={clickHandler}>클릭</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Postcode;"]},"metadata":{},"sourceType":"module"}