{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\Frontend_react\\\\src\\\\components\\\\Setting\\\\SiteAdd_map.js\";\nimport DaumPostcode from 'react-daum-postcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [visible, setVisible] = useState(false); // 우편번호 컴포넌트의 노출여부 상태\n\nconst handleComplete = data => {\n  let fullAddress = data.address;\n  let extraAddress = '';\n\n  if (data.addressType === 'R') {\n    if (data.bname !== '') {\n      extraAddress += data.bname;\n    }\n\n    if (data.buildingName !== '') {\n      extraAddress += extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\n    }\n\n    fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\n  }\n\n  setWriteInfo({ ...writeInfo,\n    address: fullAddress\n  });\n  setVisible(false);\n};\n\n{\n  visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: closeButton,\n      title: \"\\uB2EB\\uAE30\",\n      onClick: () => setVisible(false),\n      children: \"\\uB2EB\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DaumPostcode, {\n      onComplete: handleComplete,\n      style: addressStyle,\n      height: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this) : null;\n}\n\n/*#__PURE__*/\n_jsxDEV(AdressDiv, {\n  placeholder: \"\\uC8FC\\uC18C\\uB97C \\uAC80\\uC0C9\\uD574\\uC8FC\\uC138\\uC694\",\n  onClick: () => setVisible(true),\n  defaultValue: writeInfo.address\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 1\n}, this);","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/Frontend_react/src/components/Setting/SiteAdd_map.js"],"names":["DaumPostcode","visible","setVisible","useState","handleComplete","data","fullAddress","address","extraAddress","addressType","bname","buildingName","setWriteInfo","writeInfo","closeButton","addressStyle"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,qBAAzB;;AAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC,C,CAA+C;;AAE/C,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,MAAIC,WAAW,GAAGD,IAAI,CAACE,OAAvB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAIH,IAAI,CAACI,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,QAAIJ,IAAI,CAACK,KAAL,KAAe,EAAnB,EAAuB;AACrBF,MAAAA,YAAY,IAAIH,IAAI,CAACK,KAArB;AACD;;AACD,QAAIL,IAAI,CAACM,YAAL,KAAsB,EAA1B,EAA8B;AAC5BH,MAAAA,YAAY,IAAKA,YAAY,KAAK,EAAjB,GAAuB,KAAIH,IAAI,CAACM,YAAa,EAA7C,GAAiDN,IAAI,CAACM,YAAvE;AACD;;AACDL,IAAAA,WAAW,IAAKE,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA7D;AACD;;AACDI,EAAAA,YAAY,CAAC,EAAE,GAAGC,SAAL;AAAgBN,IAAAA,OAAO,EAAGD;AAA1B,GAAD,CAAZ;AACAJ,EAAAA,UAAU,CAAC,KAAD,CAAV;AACD,CAfD;;AAiBA;AAACD,EAAAA,OAAO,gBACN;AAAA,4BACE;AAAQ,MAAA,KAAK,EAAEa,WAAf;AAA4B,MAAA,KAAK,EAAC,cAAlC;AAAuC,MAAA,OAAO,EAAE,MAAMZ,UAAU,CAAC,KAAD,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AACE,MAAA,UAAU,EAAEE,cADd;AAEE,MAAA,KAAK,EAAEW,YAFT;AAGE,MAAA,MAAM,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,GASN,IATD;AAUA;;AAED;AAAA,QAAC,SAAD;AAAW,EAAA,WAAW,EAAC,yDAAvB;AAAoC,EAAA,OAAO,EAAE,MAAMb,UAAU,CAAC,IAAD,CAA7D;AAAqE,EAAA,YAAY,EAAEW,SAAS,CAACN;AAA7F;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import DaumPostcode from 'react-daum-postcode';\r\n\r\nconst [visible, setVisible] = useState(false); // 우편번호 컴포넌트의 노출여부 상태\r\n\r\nconst handleComplete = (data) => {\r\n  let fullAddress = data.address;\r\n  let extraAddress = ''; \r\n\r\n  if (data.addressType === 'R') {\r\n    if (data.bname !== '') {\r\n      extraAddress += data.bname;\r\n    }\r\n    if (data.buildingName !== '') {\r\n      extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n    }\r\n    fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n  }\r\n  setWriteInfo({ ...writeInfo, address : fullAddress})\r\n  setVisible(false)\r\n}\r\n\r\n{visible? \r\n  <div>\r\n    <button style={closeButton} title=\"닫기\" onClick={() => setVisible(false)} >닫기</button> \r\n    <DaumPostcode \r\n      onComplete={handleComplete}\r\n      style={addressStyle}\r\n      height={700}\r\n    />\r\n  </div>\r\n: null\r\n}\r\n\r\n<AdressDiv placeholder=\"주소를 검색해주세요\" onClick={() => setVisible(true)} defaultValue={writeInfo.address}/>"]},"metadata":{},"sourceType":"module"}