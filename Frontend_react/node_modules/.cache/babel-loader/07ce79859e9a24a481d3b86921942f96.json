{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\Frontend_react\\\\src\\\\components\\\\Setting\\\\SiteAdd_map.js\";\n\n/**\r\n * [Title] Daum 우편번호 검색\r\n * [Description] 리액트 컴포넌트로 만든 Daum 우편번호 검색 서비스\r\n * [Usage]\r\n * @props onComplete {Function} : 우편번호 검색 시 선택한 정보 받아올 콜백함수\r\n * @props onSearch {Function} : 주소를 검색할 경우 실행되는 콜백함수\r\n * @props onClose {Function} : 검색 결과선택 후 우편번호 검색이 닫힐때 실행되는 콜백함수\r\n * @props onResize {Function} : 검색결과로 우편번호 화면 크기가 변경될때 실행되는 콜백함수\r\n * @props className {String} : 우편번호 검색창을 감싸는 최상위 엘리먼트 ClassName\r\n * @props style : 우편번호 검색창 최상위 엘리먼트 스타일\r\n *  @default {width:100%,height:400px}\r\n * @props scriptUrl {String} : Daum 우편번호 스크립트 주소\r\n *  @default \"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"\r\n * @props defaultQuery {String} : 우편번호 검색창에 기본으로 입력할 검색어\r\n *  @default undefined\r\n * @props autoClose {Boolean} : 우편번호 검색 완료시, 자동닫힘 여부\r\n *  @default true\r\n * @props errorMessage {React element} : 로드되지 않을때 보이는 에러 메시지\r\n *  @default \"<p>현재 Daum 우편번호 서비스를 이용할 수 없습니다. 잠시 후 다시 시도해주세요.</p>\"\r\n */\nimport React from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchAddress(props) {\n  const handleComplete = data => {\n    let fullAddress = data.address;\n    let extraAddress = \"\"; // console.log(data);\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddress += data.bname;\n      }\n\n      if (data.buildingName !== \"\") {\n        extraAddress += extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n\n      fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\n    }\n\n    console.log(fullAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\n  };\n\n  const handleSearch = data => {// console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DaumPostcode, {\n    onComplete: handleComplete,\n    onSearch: handleSearch,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 6\n  }, this);\n}\n\n_c = SearchAddress;\nexport default SearchAddress;\nSearchAddress.defaultProps = {\n  style: {\n    width: \"700px\",\n    height: \"450px\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAddress\");","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/Frontend_react/src/components/Setting/SiteAdd_map.js"],"names":["React","DaumPostcode","styled","SearchAddress","props","handleComplete","data","fullAddress","address","extraAddress","addressType","bname","buildingName","console","log","handleSearch","defaultProps","style","width","height"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/B,QAAIC,WAAW,GAAGD,IAAI,CAACE,OAAvB;AACA,QAAIC,YAAY,GAAG,EAAnB,CAF+B,CAG/B;;AACA,QAAIH,IAAI,CAACI,WAAL,KAAqB,GAAzB,EAA8B;AAC5B,UAAIJ,IAAI,CAACK,KAAL,KAAe,EAAnB,EAAuB;AACrBF,QAAAA,YAAY,IAAIH,IAAI,CAACK,KAArB;AACD;;AACD,UAAIL,IAAI,CAACM,YAAL,KAAsB,EAA1B,EAA8B;AAC5BH,QAAAA,YAAY,IACVA,YAAY,KAAK,EAAjB,GAAuB,KAAIH,IAAI,CAACM,YAAa,EAA7C,GAAiDN,IAAI,CAACM,YADxD;AAED;;AACDL,MAAAA,WAAW,IAAIE,YAAY,KAAK,EAAjB,GAAuB,KAAIA,YAAa,GAAxC,GAA6C,EAA5D;AACD;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAf+B,CAeL;AAC3B,GAhBD;;AAkBA,QAAMQ,YAAY,GAAIT,IAAD,IAAU,CAC7B;AACD,GAFD;;AAIA,sBACE,QAAC,YAAD;AACE,IAAA,UAAU,EAAED,cADd;AAEE,IAAA,QAAQ,EAAEU,YAFZ;AAAA,OAGMX;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KA9BQD,a;AAgCT,eAAeA,aAAf;AAEAA,aAAa,CAACa,YAAd,GAA6B;AAC3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,MAAM,EAAE;AAFH;AADoB,CAA7B","sourcesContent":["/**\r\n * [Title] Daum 우편번호 검색\r\n * [Description] 리액트 컴포넌트로 만든 Daum 우편번호 검색 서비스\r\n * [Usage]\r\n * @props onComplete {Function} : 우편번호 검색 시 선택한 정보 받아올 콜백함수\r\n * @props onSearch {Function} : 주소를 검색할 경우 실행되는 콜백함수\r\n * @props onClose {Function} : 검색 결과선택 후 우편번호 검색이 닫힐때 실행되는 콜백함수\r\n * @props onResize {Function} : 검색결과로 우편번호 화면 크기가 변경될때 실행되는 콜백함수\r\n * @props className {String} : 우편번호 검색창을 감싸는 최상위 엘리먼트 ClassName\r\n * @props style : 우편번호 검색창 최상위 엘리먼트 스타일\r\n *  @default {width:100%,height:400px}\r\n * @props scriptUrl {String} : Daum 우편번호 스크립트 주소\r\n *  @default \"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"\r\n * @props defaultQuery {String} : 우편번호 검색창에 기본으로 입력할 검색어\r\n *  @default undefined\r\n * @props autoClose {Boolean} : 우편번호 검색 완료시, 자동닫힘 여부\r\n *  @default true\r\n * @props errorMessage {React element} : 로드되지 않을때 보이는 에러 메시지\r\n *  @default \"<p>현재 Daum 우편번호 서비스를 이용할 수 없습니다. 잠시 후 다시 시도해주세요.</p>\"\r\n */\r\n\r\n import React from \"react\";\r\n import DaumPostcode from \"react-daum-postcode\";\r\n import styled from \"@emotion/styled\";\r\n \r\n function SearchAddress(props) {\r\n   const handleComplete = (data) => {\r\n     let fullAddress = data.address;\r\n     let extraAddress = \"\";\r\n     // console.log(data);\r\n     if (data.addressType === \"R\") {\r\n       if (data.bname !== \"\") {\r\n         extraAddress += data.bname;\r\n       }\r\n       if (data.buildingName !== \"\") {\r\n         extraAddress +=\r\n           extraAddress !== \"\" ? `, ${data.buildingName}` : data.buildingName;\r\n       }\r\n       fullAddress += extraAddress !== \"\" ? ` (${extraAddress})` : \"\";\r\n     }\r\n \r\n     console.log(fullAddress); // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\r\n   };\r\n \r\n   const handleSearch = (data) => {\r\n     // console.log(data);\r\n   };\r\n \r\n   return (\r\n     <DaumPostcode\r\n       onComplete={handleComplete}\r\n       onSearch={handleSearch}\r\n       {...props}\r\n     />\r\n   );\r\n }\r\n \r\n export default SearchAddress;\r\n \r\n SearchAddress.defaultProps = {\r\n   style: {\r\n     width: \"700px\",\r\n     height: \"450px\",\r\n   },\r\n };"]},"metadata":{},"sourceType":"module"}