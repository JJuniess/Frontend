{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jueun\\\\Frontend\\\\Frontend_react\\\\src\\\\components\\\\Setting\\\\SiteAdd_map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Join(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [open, setOpen] = useState(false); //다음 주소api를 팝업처럼 관리하기 위함\n  // cleanup function을 이용\n\n  useEffect(async () => {\n    //useState를 true나 false로 지정하면 이렇게 기본 값 설정해줘야 콘솔창에 에러안나나 보다\n    setOpen(false);\n  }, []); //daum 주소검색 API 팝업 띄운 후 입력된 값 받아오기\n\n  let daumHandler = data => {\n    setInputs({ ...inputs,\n      address: data.fullAddress,\n      zonecode: data.zonecode\n    });\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      row: true,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        sm: 3,\n        children: [\"\\uC8FC\\uC18C\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"\\uFF0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => {\n            setOpen(true);\n          },\n          size: \"sm\",\n          children: \"\\uC8FC\\uC18C\\uCC3E\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 9,\n        className: \"text-left\",\n        children: [inputs.zonecode === \"\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \" \\uC8FC\\uC18C\\uB97C \\uCC3E\\uC544\\uC8FC\\uC138\\uC694. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", inputs.zonecode, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 40\n          }, this), \" \", inputs.address, \" \"]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"detailAddress\",\n          style: {\n            width: \"250px\"\n          },\n          placeholder: \"\\uC0C1\\uC138 \\uC8FC\\uC18C \\uC785\\uB825\",\n          onChange: onTyping,\n          onClick: () => {\n            if (!inputs.zonecode && !inputs.address) setOpen(true);\n          },\n          value: inputs.detailAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), \"//\\uC5EC\\uAE30 \\uC544\\uB798\\uC5D0\\uC11C open\\uC744 \\uD1B5\\uD574 daum api \\uC5F4\\uACE0 \\uB2EB\\uC74C\", open ? /*#__PURE__*/_jsxDEV(DaumPostcodeAPI, {\n      handler: daumHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this) : null, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 68\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Join, \"e27cRtNMdAs0U0o1oHlS6A8OEBo=\");\n\n_c = Join;\nexport default Join;\n\nvar _c;\n\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"sources":["C:/Users/Jueun/Frontend/Frontend_react/src/components/Setting/SiteAdd_map.js"],"names":["React","useEffect","useState","DaumPostcode","Join","history","open","setOpen","daumHandler","data","setInputs","inputs","address","fullAddress","zonecode","color","width","onTyping","detailAddress"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;;AAEA,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC,CAFsB,CAEsB;AAE1C;;AACAD,EAAAA,SAAS,CAAC,YAAY;AAChB;AACAM,IAAAA,OAAO,CAAC,KAAD,CAAP;AACP,GAHU,EAGR,EAHQ,CAAT,CALoB,CAUtB;;AACA,MAAIC,WAAW,GAAIC,IAAD,IAAU;AACxBC,IAAAA,SAAS,CAAC,EAAC,GAAGC,MAAJ;AAAYC,MAAAA,OAAO,EAAEH,IAAI,CAACI,WAA1B;AAAuCC,MAAAA,QAAQ,EAAGL,IAAI,CAACK;AAAvD,KAAD,CAAT;AACAP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAKC,sBACG;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,GAAG,MAAd;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE,CAAX;AAAA,gDACI;AAAQ,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAC;AAAP,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,oBAC6C;AAAA;AAAA;AAAA;AAAA,gBAD7C,eAEE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAE,MAAM;AAAER,YAAAA,OAAO,CAAC,IAAD,CAAP;AAAe,WAAxD;AAA0D,UAAA,IAAI,EAAC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAE,WAAvB;AAAA,mBAEKI,MAAM,CAACG,QAAP,KAAoB,EAApB,gBACC;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBAEC;AAAA,0BAAIH,MAAM,CAACG,QAAX,oBAAqB;AAAA;AAAA;AAAA;AAAA,kBAArB,OAA4BH,MAAM,CAACC,OAAnC;AAAA,wBAJN,eAME,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,eAAxB;AAAwC,UAAA,KAAK,EAAE;AAACI,YAAAA,KAAK,EAAC;AAAP,WAA/C;AAAgE,UAAA,WAAW,EAAC,wCAA5E;AACE,UAAA,QAAQ,EAAEC,QADZ;AAEE,UAAA,OAAO,EAAE,MAAK;AACd,gBAAG,CAACN,MAAM,CAACG,QAAR,IAAoB,CAACH,MAAM,CAACC,OAA/B,EAAwCL,OAAO,CAAC,IAAD,CAAP;AACvC,WAJH;AAKE,UAAA,KAAK,EAAEI,MAAM,CAACO;AALhB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,wGAsBIZ,IAAI,gBAAG,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAH,GAA8C,IAtBtD,oBAsB6D;AAAA;AAAA;AAAA;AAAA,YAtB7D;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AA0BF;;GA1CQJ,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\n\r\nfunction Join({history}){\r\n\r\n  const [open, setOpen] = useState(false);    //다음 주소api를 팝업처럼 관리하기 위함\r\n  \r\n    // cleanup function을 이용\r\n    useEffect(async () => {\r\n          //useState를 true나 false로 지정하면 이렇게 기본 값 설정해줘야 콘솔창에 에러안나나 보다\r\n          setOpen(false);   \r\n  }, []);\r\n\r\n  //daum 주소검색 API 팝업 띄운 후 입력된 값 받아오기\r\n  let daumHandler = (data) => {\r\n      setInputs({...inputs, address: data.fullAddress, zonecode : data.zonecode});\r\n      setOpen(false);\r\n  }\r\n  \r\n   return(\r\n      <div>\r\n        <FormGroup row>\r\n            <Label sm={3}>\r\n              주소<strong style={{color:\"red\"}}>＊</strong> <br/>\r\n              <Button color=\"success\" onClick={() => { setOpen(true);}} size=\"sm\">주소찾기</Button>\r\n            </Label>\r\n            <Col lg={9} className={\"text-left\"}>\r\n              {\r\n                (inputs.zonecode === \"\"\r\n                ? <span className=\"text-muted\"> 주소를 찾아주세요. </span>\r\n                : <> {inputs.zonecode} <br/> {inputs.address} </>)\r\n              }\r\n              <Input type=\"text\" name=\"detailAddress\" style={{width:\"250px\"}} placeholder=\"상세 주소 입력\"\r\n                onChange={onTyping}\r\n                onClick={()=> {\r\n                if(!inputs.zonecode && !inputs.address) setOpen(true);\r\n                }}\r\n                value={inputs.detailAddress} />\r\n            </Col>\r\n          </FormGroup>{/*주소 FormGroup*/}\r\n          \r\n          //여기 아래에서 open을 통해 daum api 열고 닫음\r\n        { open ? <DaumPostcodeAPI handler={daumHandler}/> : null } <br/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Join;"]},"metadata":{},"sourceType":"module"}