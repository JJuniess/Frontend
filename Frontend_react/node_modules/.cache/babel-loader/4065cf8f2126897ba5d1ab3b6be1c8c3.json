{"ast":null,"code":"\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDependencyArrayRef = void 0;\n/**\r\n * useEffect(\r\n *    ()=> { ... },\r\n *    [ { \"foo\": \"bar\" } ]\r\n * )\r\n * => The callback will be invoked every render.\r\n * because { \"foo\": \"bar\" } is a new instance every render.\r\n *\r\n * useEffect(\r\n *    ()=> { ... },\r\n *    [ getDependencyArrayRef({ \"foo\": \"bar\" }) ]\r\n * );\r\n * => The callback will only be invoked once.\r\n *\r\n * The optimization will be enabled only if obj is\r\n * of the form Record<string, string | number | undefined | null>\r\n * overwise the object is returned (the function is the identity function).\r\n */\n\nfunction getDependencyArrayRef(obj) {\n  if (!(obj instanceof Object) || typeof obj === \"function\") {\n    return obj;\n  }\n\n  const arr = [];\n\n  for (const key in obj) {\n    const value = obj[key];\n    const typeofValue = typeof value;\n\n    if (!(typeofValue === \"string\" || typeofValue === \"number\" && !isNaN(value) || typeofValue === \"boolean\" || value === undefined || value === null)) {\n      return obj;\n    }\n\n    arr.push(`${key}:${typeofValue}_${value}`);\n  }\n\n  return \"xSqLiJdLMd9s\" + arr.join(\"|\");\n}\n\nexports.getDependencyArrayRef = getDependencyArrayRef;","map":{"version":3,"sources":["C:/Users/Jueun/Desktop/89/Frontend/Frontend_react/node_modules/tss-react/tools/getDependencyArrayRef.js"],"names":["Object","defineProperty","exports","value","getDependencyArrayRef","obj","arr","key","typeofValue","isNaN","undefined","push","join"],"mappings":"AAAA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgC,KAAK,CAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,qBAAT,CAA+BC,GAA/B,EAAoC;AAChC,MAAI,EAAEA,GAAG,YAAYL,MAAjB,KAA4B,OAAOK,GAAP,KAAe,UAA/C,EAA2D;AACvD,WAAOA,GAAP;AACH;;AACD,QAAMC,GAAG,GAAG,EAAZ;;AACA,OAAK,MAAMC,GAAX,IAAkBF,GAAlB,EAAuB;AACnB,UAAMF,KAAK,GAAGE,GAAG,CAACE,GAAD,CAAjB;AACA,UAAMC,WAAW,GAAG,OAAOL,KAA3B;;AACA,QAAI,EAAEK,WAAW,KAAK,QAAhB,IACDA,WAAW,KAAK,QAAhB,IAA4B,CAACC,KAAK,CAACN,KAAD,CADjC,IAEFK,WAAW,KAAK,SAFd,IAGFL,KAAK,KAAKO,SAHR,IAIFP,KAAK,KAAK,IAJV,CAAJ,EAIqB;AACjB,aAAOE,GAAP;AACH;;AACDC,IAAAA,GAAG,CAACK,IAAJ,CAAU,GAAEJ,GAAI,IAAGC,WAAY,IAAGL,KAAM,EAAxC;AACH;;AACD,SAAO,iBAAiBG,GAAG,CAACM,IAAJ,CAAS,GAAT,CAAxB;AACH;;AACDV,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC","sourcesContent":["\"use strict\";\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDependencyArrayRef = void 0;\r\n/**\r\n * useEffect(\r\n *    ()=> { ... },\r\n *    [ { \"foo\": \"bar\" } ]\r\n * )\r\n * => The callback will be invoked every render.\r\n * because { \"foo\": \"bar\" } is a new instance every render.\r\n *\r\n * useEffect(\r\n *    ()=> { ... },\r\n *    [ getDependencyArrayRef({ \"foo\": \"bar\" }) ]\r\n * );\r\n * => The callback will only be invoked once.\r\n *\r\n * The optimization will be enabled only if obj is\r\n * of the form Record<string, string | number | undefined | null>\r\n * overwise the object is returned (the function is the identity function).\r\n */\r\nfunction getDependencyArrayRef(obj) {\r\n    if (!(obj instanceof Object) || typeof obj === \"function\") {\r\n        return obj;\r\n    }\r\n    const arr = [];\r\n    for (const key in obj) {\r\n        const value = obj[key];\r\n        const typeofValue = typeof value;\r\n        if (!(typeofValue === \"string\" ||\r\n            (typeofValue === \"number\" && !isNaN(value)) ||\r\n            typeofValue === \"boolean\" ||\r\n            value === undefined ||\r\n            value === null)) {\r\n            return obj;\r\n        }\r\n        arr.push(`${key}:${typeofValue}_${value}`);\r\n    }\r\n    return \"xSqLiJdLMd9s\" + arr.join(\"|\");\r\n}\r\nexports.getDependencyArrayRef = getDependencyArrayRef;\r\n"]},"metadata":{},"sourceType":"script"}